---
import { validatePasswordResetSessionRequest } from "@lib/password-reset-session";

const { user, session } = validatePasswordResetSessionRequest(Astro);

if (user === null) {
	return Astro.redirect("/forgot-password");
}
if (session.emailVerified) {
	return Astro.redirect("/reset-password");
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Faroe and Astro basic example</title>
	</head>
	<body>
		<h1>Verify your email address</h1>
		<p>A verification code was sent to {user.email}</p>
		<form id="verify-form">
			<label for="verify-form.email">Code</label>
			<input id="verify-form.email" name="code" /><br />
			<button>Verify</button>
			<p id="verify-form.message"></p>
		</form>
	</body>
</html>

<script>
	const verifyForm = document.getElementById("verify-form") as HTMLFormElement;
	const verifyFormMessageElement = document.getElementById("verify-form.message") as HTMLParagraphElement;

	verifyForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(e.target as HTMLFormElement);
		const code = formData.get("code");
		const body = JSON.stringify({
			code: code
		});
		const response = await fetch("/api/verify-password-reset-email", {
			method: "POST",
			body
		});
		if (response.ok) {
			window.location.href = "/reset-password";
		} else {
			verifyFormMessageElement.innerText = await response.text();
		}
	});
</script>
