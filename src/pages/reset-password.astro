---
import { validatePasswordResetSessionRequest } from "@lib/password-reset-session";

const { user, session } = validatePasswordResetSessionRequest(Astro);

if (user === null) {
	return Astro.redirect("/forgot-password");
}
if (!session.emailVerified) {
	return Astro.redirect("/verify-password-reset-email");
}
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Faroe and Astro basic example</title>
	</head>
	<body>
		<h1>Reset your password</h1>
		<form id="reset-form">
			<label for="reset-form.password">New password</label>
			<input type="password" id="reset-form.password" name="password" /><br />
			<button>Reset</button>
			<p id="reset-form.message"></p>
		</form>
	</body>
</html>

<script>
	const resetForm = document.getElementById("reset-form") as HTMLFormElement;
	const resetFormMessageElement = document.getElementById("reset-form.message") as HTMLParagraphElement;

	resetForm.addEventListener("submit", async (e) => {
		e.preventDefault();
		const formData = new FormData(e.target as HTMLFormElement);
		const password = formData.get("password");
		const body = JSON.stringify({
			password: password
		});
		const response = await fetch("/api/reset-password", {
			method: "POST",
			body
		});
		if (response.ok) {
			window.location.href = "/";
		} else {
			resetFormMessageElement.innerText = await response.text();
		}
	});
</script>
